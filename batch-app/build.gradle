plugins {
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'k8sbook'
version = '1.0.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR3")
    }
}

dependencies {
    implementation project(':sample-app-common')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.opencsv:opencsv:4.6'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.ninja-squad:DbSetup:2.1.0'
    testImplementation 'org.assertj:assertj-db:1.3.0'
    testImplementation 'io.findify:s3mock_2.12:0.2.5'
}

test {
    useJUnitPlatform {
        excludeTags 'DBRequired', 'S3Test'
    }
    environment "DB_URL", localDbUrl
    environment "DB_USERNAME", localDbUsername
    environment "DB_PASSWORD", localDbPassword
    environment "CLOUD_AWS_CREDENTIALS_ACCESSKEY", awsAccessKey
    environment "CLOUD_AWS_CREDENTIALS_SECRETKEY", awsSecretKey
    environment "CLOUD_AWS_REGION_STATIC", awsRegion
    environment "SAMPLE_APP_BATCH_BUCKET_NAME", bucketName
    environment "SAMPLE_APP_BATCH_FOLDER_NAME", folderName
}

task testWithDatabase(type: Test, dependsOn: testClasses) {
    useJUnitPlatform {
    }
    environment "DB_URL", localDbUrl
    environment "DB_USERNAME", localDbUsername
    environment "DB_PASSWORD", localDbPassword
    environment "CLOUD_AWS_CREDENTIALS_ACCESSKEY", awsAccessKey
    environment "CLOUD_AWS_CREDENTIALS_SECRETKEY", awsSecretKey
    environment "CLOUD_AWS_REGION_STATIC", awsRegion
    environment "SAMPLE_APP_BATCH_BUCKET_NAME", bucketName
    environment "SAMPLE_APP_BATCH_FOLDER_NAME", folderName
}

bootJar {
    launchScript()
}
